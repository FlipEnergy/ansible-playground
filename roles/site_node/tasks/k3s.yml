- name: Check if K3s version is installed
  ansible.builtin.command: k3s --version
  register: k3s_version_command
  ignore_errors: yes
  changed_when: False

- name: set K3s version fact
  set_fact:
    k3s_version: "{{ k3s_version_command.stdout | regex_search(regexp) }}"
  vars:
    regexp: 'v[0-9]+\.[0-9]+\.[0-9]+\+k3s[0-9]'
    cacheable: yes
  when: k3s_version_command.rc == 0

- name: install k3s via official script (first node)
  ansible.builtin.shell: curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ K3S_VERSION }} {{ 'K3S_TOKEN={}'.format(K3S_TOKEN) }} sh -s - server --disable traefik --cluster-init {{ K3S_EXTRA_OPTS }}
  when:
    - k3s_version_command.rc != 0 or k3s_version != K3S_VERSION
    - inventory_hostname == K3S_INIT_NODE
    - '"k3s_node_control" in ADD_ROLES'
  args:
    warn: False

- name: install k3s via official script (rest of the control-plane nodes)
  ansible.builtin.shell: curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ K3S_VERSION }} K3S_TOKEN='{{ K3S_TOKEN }}' K3S_URL=https://{{ K3S_INIT_NODE }}:6443 sh -s - server --disable traefik {{ K3S_EXTRA_OPTS }}
  when:
    - k3s_version_command.rc != 0 or k3s_version != K3S_VERSION
    - inventory_hostname != K3S_INIT_NODE
    - '"k3s_node_control" in ADD_ROLES'
  args:
    warn: False

- name: install k3s via official script (rest of the worker nodes)
  ansible.builtin.shell: curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION={{ K3S_VERSION }} K3S_TOKEN='{{ K3S_TOKEN }}' K3S_URL=https://{{ K3S_INIT_NODE }}:6443 sh -s - agent {{ K3S_EXTRA_OPTS }}
  when:
    - k3s_version_command.rc != 0 or k3s_version != K3S_VERSION
    - inventory_hostname != K3S_INIT_NODE
    - '"k3s_node_worker" in ADD_ROLES'
  args:
    warn: False
